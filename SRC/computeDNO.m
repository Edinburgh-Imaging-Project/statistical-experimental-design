function [iOptRec,time] = computeDNO(M,Ts,iTRecs,xyRec,show)
%COMPUTEDNO Compute a DN Optimal design
%   This function computes the optimal receiver design for a given model
%   and number of receivers using Dn Optimization as a quality measure.
%   Inputs:
%   M - model parameters
%   Ts - Time data as generated by 'compute_traveltimes3D'
%   iTRecs - index of receivers in Ts
%   xyRec - X and Y coordinates of receivers
%   show - boolean to toggle graph outputs

% initialize vectors
xOptRec = nan(1,size(iTRecs,1));
iOptRec = zeros(1, M.nRecMax);
useRec = false(1,size(iTRecs,1));
usedT = [];

% initialize figure for showing criterion map
if show
    p = numSubplots(M.nRecMax);
    figure(2)
    clf
end

% Loop until all nRecMax receivers are placed in a sequential fashion
tBegin = tic;
for i = 1:M.nRecMax
    
    tic
    DN = -inf(length(xyRec),1);
    
    % Loop over all possible receiver locations and calculate the Dn values
    parfor it = 1:size(xyRec,2)
        
        % Time points to use
        A = [reshape(Ts(iTRecs(:,it), :),[],1) usedT];
        
        % Calculate Dn
        sigmaG = cov(A);
        dn = log(det(sigmaG));
        
        % Make sure value is real otherwise -infinity
        if isreal(dn)
            DN(it) = dn;
        end
        
    end
    toc
    
    % Find optimal receiver
    [maxDN, iOptRec(i)] = max(DN);
    xOptRec(i) = xyRec(iOptRec(i));
    useRec(iOptRec(i)) = true;
    
    % Plot the map of calculated Dn values
    if show
        plotMetric(DN,xyRec,iOptRec,p,i,'DNO')
    end
    
    % Store the data generated by selected receivers
    usedT = [usedT reshape(Ts(iTRecs(:,iOptRec(i)), :),[],1)];
    
    % Output status
    fprintf('DN in iteration %d is %0.4f \r',i,maxDN)
    fprintf('%d%% done. \r',round(i/M.nRecMax*100))
    
end

time = toc(tBegin);

% Output final status
fprintf('Optimal design is calculated. \r')
fprintf('Assigned %d unique receiver locations. \r', sum(useRec))
end

